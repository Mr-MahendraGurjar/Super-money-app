// Mocks generated by Mockito 5.4.6 from annotations
// in send_money_app/test/features/wallet/data/repositories/wallet_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:send_money_app/features/wallet/data/datasources/wallet_local_data_source.dart'
    as _i6;
import 'package:send_money_app/features/wallet/data/datasources/wallet_remote_data_source.dart'
    as _i4;
import 'package:send_money_app/features/wallet/data/models/transaction_model.dart'
    as _i2;
import 'package:send_money_app/features/wallet/data/models/wallet_model.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTransactionModel_0 extends _i1.SmartFake
    implements _i2.TransactionModel {
  _FakeTransactionModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletModel_1 extends _i1.SmartFake implements _i3.WalletModel {
  _FakeWalletModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WalletRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletRemoteDataSource extends _i1.Mock
    implements _i4.WalletRemoteDataSource {
  MockWalletRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.TransactionModel> sendMoney(double? amount) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMoney,
          [amount],
        ),
        returnValue:
            _i5.Future<_i2.TransactionModel>.value(_FakeTransactionModel_0(
          this,
          Invocation.method(
            #sendMoney,
            [amount],
          ),
        )),
      ) as _i5.Future<_i2.TransactionModel>);

  @override
  _i5.Future<List<_i2.TransactionModel>> getTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
        ),
        returnValue: _i5.Future<List<_i2.TransactionModel>>.value(
            <_i2.TransactionModel>[]),
      ) as _i5.Future<List<_i2.TransactionModel>>);
}

/// A class which mocks [WalletLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletLocalDataSource extends _i1.Mock
    implements _i6.WalletLocalDataSource {
  MockWalletLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.WalletModel> getWallet() => (super.noSuchMethod(
        Invocation.method(
          #getWallet,
          [],
        ),
        returnValue: _i5.Future<_i3.WalletModel>.value(_FakeWalletModel_1(
          this,
          Invocation.method(
            #getWallet,
            [],
          ),
        )),
      ) as _i5.Future<_i3.WalletModel>);

  @override
  _i5.Future<void> updateWallet(_i3.WalletModel? wallet) => (super.noSuchMethod(
        Invocation.method(
          #updateWallet,
          [wallet],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> cacheTransaction(_i2.TransactionModel? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheTransaction,
          [transaction],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.TransactionModel>> getCachedTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedTransactions,
          [],
        ),
        returnValue: _i5.Future<List<_i2.TransactionModel>>.value(
            <_i2.TransactionModel>[]),
      ) as _i5.Future<List<_i2.TransactionModel>>);
}
